# This is an example configuration for the event crawler. Where necessary comments
# provide more information on the meaning of the various config fields. If there's still
# something that is not clear, try looking at the production configuration file, config.yml
# There should be enough examples of how a crawler config can look like.

crawlers:
  - name: LocationName
    type: concert # type of the crawler. Currently, there is only 'concert' and a location can only have one type.
    city: Munich # city of the location.
    url: "https://backstage.info/veranstaltungen-2/alle-veranstaltungen" # url of the page that contains the events.
    event: ".event" # selector for an event.
    exclude_with_selector:
      - ".exclude" # exclude events that match this selector.
    fields: # a dictionary of fields. Only those listed below exist but not all are mandatory
      title: # Mandatory field.
        selector: ".pos-title a" # selector for the title
        regex_extract: # a regex to extract a substring. If not provided the entire text of the given selector is used.
          exp: "[^•]*" # the actual regular expression.
          index: 0 # if the regular expression has multiple matches, only the match with the given index is used.
      comment: # not a mandatory field.
        selector: ".event h3"
        regex_extract:
          exp: "[^•]*"
          index: 0
        max_length: 200 # If the length of the extracted text exceeds this value, the text is truncated.
      url: # an event specific url that points to page providing details about this specific event. If not given the 'main url' of this crawler is used.
        selector: ".pos-title a"
        relative: true # Whether the url provided is a relative url or not.
        attr: "data-a2a-url" # The key of the attribute that contains the url. The default is 'href'.
        on_subpage: ["comment", "date"] # A list of fields that have to be extracted from the event-specific subpage and not the main page.
      # this field contains instructions on how to extract the event date (including time). Not all subkeys have to be provided.
      # For (almost) each missing piece of information there is a default value.
      date: 
        # For specific examples that are not explained here checkout the production config, config.yml.
        # However, the way different fields are configured is identical to the ones explicitly explained below.
        day:
          selector: "<selector>"
          layout: "<layout>"
          regex_extract:
            exp: "<regex>"
            index: 0
        month:
          selector: "<selector>"
          layout: "<layout>"
        year:
          selector: "<selector>"
          layout: "<layout>"
        day_month:
          selector: "<selector>"
          layout: "<layout>"
        day_month_year_time:
          selector: "<selector>"
          layout: "<layout>"
        day_month_year:
          selector: ".pos-datum b" # the selector of the text that contains the day, the month and the year of the date
          # The layout is basically how the date string would look like if it were the 2. of january 2006.
          # The layout always has to be given in English. Checkout the production config file config.yml to get a
          # better understanding of how this layout field can look like.
          layout: "Monday, 2. January 2006"
        time: # similar to the explanation above.
          selector: ".pos-einlass"
          layout: "Beginn: 15:04"
          regex_extract: # a regex to extract a substring if necessary. If not given the entire string with the given selector is used.
            exp: "Beginn: [0-9]{1,2}:[0-9]{2}" # the actual regular expression.
            index: 0 # if the regular expression has multiple matches, only the match with the given index is used.
        time: # another example for time.
          selector: ".right .time"
          layout: "Start: 15:04"
          # Sometimes multiple nodes match the given selector. Then an index can be given to chose the right one.
          # -1 means the last node. The default is 0
          node_index: -1
          # we only need this if multiple (text) children match the regex or if no regex is given and we need a specific child.
          # Checkout the Papiersaal crawler config for a real life example. Currently, all keys under 'date' can define this field.
          child_index: 3
        location: "Europe/Berlin" # The time zone of this event location
        language: "de_DE" # the language that the date & time string(s) are written in.
    filters: # A list of filters to remove certain items from the event list.
      - field: "title" # The field that has to be checked. Currently, only 'title' & 'comment' are valid values.
        regex_ignore: "CORONA TESTZENTRUM.*" # A regex matches the field values whose events should be excluded.
    paginator: # can be defined if the events are spread across multiple pages.
      selector: ".pagination .next"
      relative: true
      # Sometimes multiple nodes match the given selector. Then an index can be given to chose the right one.
      # -1 means the last node. The default is 0
      node_index: -1
      max_pages: 2 # default is 0 which means there is no limit.